from aiogram.types import InlineKeyboardMarkup, ReplyKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder, ReplyKeyboardBuilder

from src.bot.filters.admin import CallBackAdminListFilter, CallBackCategoriesListFilter
from src.db.models import User, Category


async def start_admin_kb():
    ikb = InlineKeyboardBuilder()
    ikb.button(text='–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –Ω–∞ –ø—Ä–æ–¥–∞–∂—É ‚úÖ', callback_data='add_product_in_db')
    ikb.adjust(1)

    return ikb.as_markup(
        resize_keyboard=True,
        one_time_keyboard=True,
    )


async def get_moderators_ikb(moderators: list[User]):
    ikb = InlineKeyboardBuilder()
    for moderator in moderators:
        text = f'{moderator.user_id} | {moderator.user_name} | {moderator.role.name} ‚ùå'
        ikb.button(
            text=text,
            callback_data=CallBackAdminListFilter(admin_id=moderator.user_id)
        )
    ikb.button(text='–î–æ–±–∞–≤–∏—Ç—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ ‚úÖ', callback_data='add_moderator')
    ikb.button(text='–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é ‚¨ÖÔ∏è', callback_data='start_menu')
    ikb.adjust(1)

    return ikb.as_markup(resize_keyboard=True)


async def get_categories_ikb(categories: list[Category] | None):
    ikb = InlineKeyboardBuilder()
    if categories is not None:
        for category in categories:
            ikb.button(
                text=category.category_name,
                callback_data=CallBackCategoriesListFilter(category_name=category.category_name)
            )
    ikb.button(text='–î–æ–±–∞–≤–∏—Ç—å –Ω—É–∂–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é ‚úÖ', callback_data='add_category')
    ikb.adjust(1)

    return ikb.as_markup(resize_keyboard=True)


async def add_product_in_db() -> InlineKeyboardMarkup:
    ikb = InlineKeyboardBuilder()
    ikb.button(text='–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å ‚úÖ', callback_data='product_publish')
    ikb.button(text='–ò–∑–º–µ–Ω–∏—Ç—å –∫–∞–∫–æ–π-—Ç–æ –ø—É–Ω–∫—Ç ‚¨ÖÔ∏è', callback_data='product_update')
    ikb.button(text='–û—Ç–º–µ–Ω–∏—Ç—å –ø—É–±–ª–∏–∫–∞—Ü–∏—é ‚ùå', callback_data='product_cancel')
    ikb.adjust(1)

    return ikb.as_markup(
        resize_keyboard=True,
        one_time_keyboard=True,
    )


async def save_images_in_static() -> ReplyKeyboardMarkup:
    kb = ReplyKeyboardBuilder()
    kb.button(text='–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å ‚úÖ')
    kb.adjust(1)

    return kb.as_markup(
        resize_keyboard=True,
        one_time_keyboard=True,
        input_field_placeholder='–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, –∫–æ–≥–¥–∞ –¥–æ–±–∞–≤–∏—Ç–µ –≤—Å–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏ üëá',
    )
